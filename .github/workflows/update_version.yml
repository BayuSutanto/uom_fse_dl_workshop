name: Update Version

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # This ensures tags are fetched too
          # Use the personal access token for checkout to enable pushing
          token: ${{ secrets.VERSION_UPDATE_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Update version information
        run: |
          # Get current version from Git
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            # If this is triggered by a tag, use the tag
            VERSION=$(echo ${{ github.ref }} | sed 's/refs\/tags\/v//')
          else
            # Otherwise use the latest tag or default
            VERSION=$(git describe --tags --abbrev=0 2>/dev/null | sed 's/v//' || echo "0.9.5")
          fi
          
          # Get short commit hash
          COMMIT=$(git rev-parse --short HEAD)
          
          # Create version file content
          cat > utils/__version__.py << EOF
"""
Version information for the UoM Deep Learning Workshop utilities package.
Auto-generated by GitHub Actions CI/CD pipeline.
"""

# Version information
__version__ = "$VERSION"
__commit__ = "$COMMIT"
__version_full__ = "$VERSION+$COMMIT"
EOF
          
          echo "Updated version to $VERSION+$COMMIT"
      
      - name: Commit and push if changed
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add utils/__version__.py
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update version to $(cat utils/__version__.py | grep '__version__ =' | cut -d'"' -f2)+$(cat utils/__version__.py | grep '__commit__ =' | cut -d'"' -f2)")
          
          # Use the personal access token for pushing changes
          git push https://${{ secrets.VERSION_UPDATE_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref }}